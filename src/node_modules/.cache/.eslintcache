[{"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/index.js":"1","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/App.js":"2","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Team/Team.js":"3","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/NewTeam/NewTeam.js":"4","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Teams/Teams.js":"5","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Home/Home.js":"6","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/EditTeam/EditTeam.js":"7","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Nav/Nav.js":"8","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Api/API.js":"9","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Players/Players.js":"10","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Comments/Comments.js":"11","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Players/Player.js":"12","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Api/Axios.js":"13","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Comments/Comment.js":"14","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Comments/CommentForm.js":"15","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Context/Context.js":"16"},{"size":254,"mtime":1691417406408,"results":"17","hashOfConfig":"18"},{"size":967,"mtime":1691417406406,"results":"19","hashOfConfig":"18"},{"size":2341,"mtime":1691700897237,"results":"20","hashOfConfig":"18"},{"size":6603,"mtime":1691690828522,"results":"21","hashOfConfig":"18"},{"size":1138,"mtime":1691700932658,"results":"22","hashOfConfig":"18"},{"size":164,"mtime":1691417406407,"results":"23","hashOfConfig":"18"},{"size":7835,"mtime":1691699051471,"results":"24","hashOfConfig":"18"},{"size":486,"mtime":1691550231233,"results":"25","hashOfConfig":"18"},{"size":2937,"mtime":1691690828522,"results":"26","hashOfConfig":"18"},{"size":1601,"mtime":1691700886637,"results":"27","hashOfConfig":"18"},{"size":2939,"mtime":1691700910245,"results":"28","hashOfConfig":"18"},{"size":118,"mtime":1691430625668,"results":"29","hashOfConfig":"18"},{"size":224,"mtime":1691417406407,"results":"30","hashOfConfig":"18"},{"size":1424,"mtime":1691550231231,"results":"31","hashOfConfig":"18"},{"size":1858,"mtime":1691550231232,"results":"32","hashOfConfig":"18"},{"size":105,"mtime":1691430625668,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sgsl67",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/index.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/App.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Team/Team.js",["87"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStarHalfStroke,\n  faArrowAltCircleLeft,\n  faTrashCan,\n  faPenToSquare,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport \"./Team.css\";\n\nimport Comments from \"../Comments/Comments\";\nimport Players from \"../Players/Players\";\nimport { getTeamById, deleteTeamById } from \"../Api/API\";\n\nfunction Team() {\n  const [team, setTeam] = useState(null);\n\n  const navigate = useNavigate();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    toFetchTeamById();\n  }, []);\n\n  async function toFetchTeamById() {\n    try {\n      let result = await getTeamById(id);\n\n      setTeam(result.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const deleteTeam = async () => {\n    try {\n      const response = await deleteTeamById(id);\n\n      const { name } = response.data;\n      alert(`Team ${name} has been deleted`);\n      navigate(\"/Teams\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n \n  return (\n    <div>\n      <div className=\"container\">\n      {team && (\n        <div>\n          <span className=\"flex\">\n            <h1> {team.name} </h1>\n            {team.is_favorite ? (\n              <div className=\"star\">\n                <FontAwesomeIcon\n                  icon={faStarHalfStroke}\n                  style={{ fontSize: \"21px\" }}\n                />\n              </div>\n            ) : (\n              \"\"\n            )}\n          </span>\n\n          <Players />\n          \n          <span className=\"button-group\">\n          <FontAwesomeIcon\n            icon={faArrowAltCircleLeft}\n            onClick={() => navigate(\"/teams\")}\n            style={{ fontSize: \"25px\" }}\n          />\n          <FontAwesomeIcon\n            icon={faTrashCan}\n            onClick={() => deleteTeam()}\n            style={{ fontSize: \"25px\" }}\n          />\n          <Link to={`/teams/${id}/edit`}\n          className=\"link\">\n            {\" \"}\n            <FontAwesomeIcon\n              icon={faPenToSquare}\n              style={{ fontSize: \"25px\" }}\n            />\n          </Link>\n\n          </span>\n        </div>\n      )}\n\n      </div>\n\n      <br />\n      <h3> Trash Talk</h3>\n      <Comments />\n    </div>\n  );\n}\n\nexport default Team;\n","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/NewTeam/NewTeam.js",["88","89","90"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { createTeam, getallPlayersAPI, createPlayersInTeam } from \"../Api/API\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-regular-svg-icons\";\nimport \"./NewTeam.css\";\n\nfunction NewTeam() {\n  const API = process.env.REACT_APP_API_URL;\n  const navigate = useNavigate();\n\n  const [seletedPlayer, setSelectedPlayer] = useState(\"\");\n\n  const [team, setTeam] = useState({\n    team_id: 0,\n    name: \"\",\n    is_favorite: false,\n    \"players-sg\": \"\",\n    \"players-pg\": \"\",\n    \"players-sf\": \"\",\n    \"players-pf\": \"\",\n    \"players-c\": \"\",\n  });\n\n  const [pgList, setPgList] = useState([]);\n  const [sgList, setSgList] = useState([]);\n  const [sfList, setSfList] = useState([]);\n  const [pfList, setPfList] = useState([]);\n  const [cList, setCList] = useState([]);\n\n  async function handleCreateTeam(e) {\n    e.preventDefault();\n    try {\n      let resultTeam = await createTeam(team);\n      const positions = [\"sg\", \"pg\", \"sf\", \"c\", \"pf\"];\n      for (let x = 0; x < positions.length; x++) {\n\n        await createPlayersInTeam({fantasy: [ resultTeam.data[0].id, team[\"players-\" + positions[x]] ]});\n\n        }\n\n      setTeam({\n        name: \"\",\n        is_favorite: false,\n      });\n      navigate(\"/teams\");\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  function handleOnchange(id, value) {\n    setTeam({\n      ...team,\n      [id]: value,\n    });\n    // setSelectedPlayer({\n    //   ...seletedPlayer,\n    //   [id]: value,\n    // });\n  }\n\n  //get players in select menu\n  useEffect(() => {\n    async function getAllplayers() {\n      try {\n        let result = await getallPlayersAPI();\n\n        let pointGuards = result.data.filter((item) => item.position === \"PG\");\n        let shootingGuards = result.data.filter(\n          (item) => item.position === \"SG\"\n        );\n        let smallForward = result.data.filter((item) => item.position === \"SF\");\n        let powerForward = result.data.filter((item) => item.position === \"PF\");\n        let center = result.data.filter((item) => item.position === \"C\");\n\n        setPgList(pointGuards);\n        setSgList(shootingGuards);\n        setSfList(smallForward);\n        setPfList(powerForward);\n        setCList(center);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getAllplayers();\n  }, [API]);\n\n  //create/add players in team\n  // async function addPlayersInTeam() {\n  //   try {\n  //     let result = await createPlayersInTeam();\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  return (\n    <div className=\"container\">\n      <h4> New Team</h4>\n      <form onSubmit={handleCreateTeam}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Name</label>\n          <input\n            className=\"form-control\"\n            required\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n            value={team.name}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Favorite</label>\n          <input\n            className=\"form-control\"\n            required\n            type=\"checkbox\"\n            name=\"is_favorite\"\n            id=\"is_favorite\"\n            onChange={(e) => handleOnchange(e.target.id, e.target.checked)}\n            value={team.is_favorite}\n          />\n        </div>\n\n        <h3>Players</h3>\n\n        <p>Point Guard</p>\n        <div className=\"mb-3\">\n          <select\n            id=\"players-pg\"\n            value={team[\"players-pg\"]}\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n            name=\"players-pg\"\n          >\n            <option>Please select a Player</option>\n            {pgList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <p>Shooting Guard</p>\n        <div className=\"mb-3\">\n          <select\n            id=\"players-sg\"\n            value={team[\"players-sg\"]}\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n            name=\"players-sg\"\n          >\n            <option>Please select a Player</option>\n            {sgList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <p>Small Forward</p>\n        <div className=\"mb-3\">\n          <select\n            id=\"players-sf\"\n            value={team[\"players-sf\"]}\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n            name=\"players-sf\"\n          >\n            <option>Please select a Player</option>\n            {sfList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <p>Power Forward</p>\n        <div className=\"mb-3\">\n          <select\n            id=\"players-pf\"\n            value={team[\"players-pf\"]}\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n            name=\"players-pf\"\n          >\n            <option>Please select a Player</option>\n            {pfList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <p>Center</p>\n        <div className=\"mb-3\">\n          <select\n            id=\"players-c\"\n            value={team[\"players-c\"]}\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n            name=\"players-c\"\n          >\n            <option>Please select a Player</option>\n            {cList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <button>Submit</button>\n      </form>\n\n      <span>\n        <FontAwesomeIcon\n          icon={faArrowAltCircleLeft}\n          onClick={() => navigate(\"/teams\")}\n          style={{ fontSize: \"25px\" }}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default NewTeam;\n","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Teams/Teams.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Home/Home.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/EditTeam/EditTeam.js",["91","92","93","94","95","96"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  getTeamById,\n  updateTeamById,\n  getTeamPlayerAPI,\n  getallPlayersAPI,\n} from \"../Api/API\";\n\nfunction EditTeam() {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const API = process.env.REACT_APP_API_URL;\n\n  const [pgList, setPgList] = useState([]);\n  const [sgList, setSgList] = useState([]);\n  const [sfList, setSfList] = useState([]);\n  const [pfList, setPfList] = useState([]);\n  const [cList, setCList] = useState([]);\n\n  const [team, setTeam] = useState({\n    id: 0,\n    name: \"\",\n    is_favorite: false,\n    \"players-sg\": 0,\n    \"players-pg\": 0,\n    \"players-sf\": 0,\n    \"players-pf\": 0,\n    \"players-c\": 0,\n  });\n\n  const [selectedPlayer, setSelectedPlayer] = useState([]);\n  const [teamMembers, setTeamMembers] = useState(false);\n  //inistall team info before changes\n  useEffect(() => {\n    const fetchTeam = async () => {\n      try {\n        const response = await getTeamById(id);\n        const responsePlayers = await getTeamPlayerAPI(id);\n        let players = responsePlayers.data;\n        let pg = players.filter((item) => item.position === \"PG\");\n        let sg = players.filter((item) => item.position === \"SG\");\n        let sf = players.filter((item) => item.position === \"SF\");\n        let pf = players.filter((item) => item.position === \"PF\");\n        let c = players.filter((player) => player.position === \"C\");\n\n        setTeam({\n          ...response.data,\n          \"players-sg\": sg[0].player_id,\n          \"players-pg\": pg[0].player_id,\n          \"players-sf\": sf[0].player_id,\n          \"players-pf\": pf[0].player_id,\n          \"players-c\": c[0].player_id,\n        });\n      } catch (error) {\n        navigate(\"/404\");\n      }\n    };\n\n    fetchTeam();\n    getAllplayers();\n    const fetchPlayerInTeam = async () => {\n      try {\n        const response = await getTeamPlayerAPI(id);\n\n        setSelectedPlayer(response.data);\n      } catch (error) {\n        navigate(\"/404\");\n      }\n    };\n    //fetchPlayerInTeam();\n    // fetch();\n  }, [id]);\n  let pg = selectedPlayer.filter((item) => item.position === \"PG\").player_id;\n  let sg = selectedPlayer.filter((item) => item.position === \"SG\").player_id;\n  let sf = selectedPlayer.filter((item) => item.position === \"SF\").player_id;\n  let pf = selectedPlayer.filter((item) => item.position === \"PF\").player_id;\n  let c = selectedPlayer.filter((item) => item.position === \"C\").player_id;\n\n  async function fetch() {\n    try {\n      let result = await getTeamPlayerAPI(id);\n      // console.log(result.data);\n\n      setSelectedPlayer(result.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function getAllplayers() {\n    try {\n      let result = await getallPlayersAPI();\n\n      let pointGuards = result.data.filter((item) => item.position === \"PG\");\n      let shootingGuards = result.data.filter((item) => item.position === \"SG\");\n      let smallForward = result.data.filter((item) => item.position === \"SF\");\n      let powerForward = result.data.filter((item) => item.position === \"PF\");\n      let center = result.data.filter((item) => item.position === \"C\");\n\n      setPgList(pointGuards);\n      setSgList(shootingGuards);\n      setSfList(smallForward);\n      setPfList(powerForward);\n      setCList(center);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //handle on change\n  function handleOnchange(id, value) {\n    setTeam({\n      ...team,\n      [id]: value,\n    });\n  }\n  const handleCheckboxChange = (e) => {\n    setTeam({\n      ...team,\n      is_favorite: !team.is_favorite,\n    });\n  };\n\n  //handle submit\n  const updateTeam = async (id) => {\n    try {\n      await updateTeamById(id, team);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      await updateTeam(id);\n      navigate(`/teams/${id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return (\n    <div className=\"container\">\n      <h4> Edit Team</h4>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Name</label>\n          <input\n            className=\"form-control\"\n            required\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n            value={team.name}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Favorite</label>\n          <input\n            className=\"form-control\"\n            type=\"checkbox\"\n            name=\"is_favorite\"\n            id=\"is_favorite\"\n            onChange={handleCheckboxChange}\n            checked={team.is_favorite}\n          />\n        </div>\n\n        {/* ///////////////////////////////PLAYERS */}\n\n        <h3>Players</h3>\n\n        <p>Point Guard</p>\n        <div className=\"mb-3\">\n          <select\n            name=\"players-pg\"\n            required\n            id=\"players-pg\"\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n            value={pg}\n          >\n            {pgList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <p>Shooting Guard</p>\n        <div className=\"mb-3\">\n          <select\n            name=\"players-sg\"\n            required\n            id=\"players-sg\"\n            value={sg}\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n          >\n            {sgList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <p>Small Forward</p>\n        <div className=\"mb-3\">\n          <select\n            name=\"players-sf\"\n            required\n            id=\"players-sf\"\n            value={sf}\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n          >\n            {sfList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <p>Power Forward</p>\n        <div className=\"mb-3\">\n          <select\n            name=\"players-pf\"\n            required\n            id=\"players-pf\"\n            value={pf}\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n          >\n            {pfList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <p>Center</p>\n        <div className=\"mb-3\">\n          <select\n            name=\"players-c\"\n            value={c}\n            required\n            id=\"players-c\"\n            onChange={(e) => handleOnchange(e.target.id, e.target.value)}\n          >\n            {cList.map(({ id, player_name }) => {\n              return (\n                <option key={id} value={id}>\n                  {player_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <button>Submit</button>\n      </form>\n\n      <span>\n        <FontAwesomeIcon\n          icon={faArrowAltCircleLeft}\n          onClick={() => navigate(\"/teams\")}\n          style={{ fontSize: \"25px\" }}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default EditTeam;\n","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Nav/Nav.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Api/API.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Players/Players.js",["97","98"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Player from \"./Player\";\nimport \"./Player.css\";\n\nimport { getTeamPlayerAPI } from \"../Api/API\";\n\nconst API = process.env.REACT_APP_API_URL;\nfunction Players() {\n  const [players, setPlayers] = useState([]);\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    fetch();\n  }, [id, API]);\n\n  async function fetch() {\n    try {\n      let result = await getTeamPlayerAPI(id);\n\n      setPlayers(result.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"player-container\">\n      {/* <select name=\"players\" >{players.map(({id, player_name})=>{\n        return(<option value={player_name}>{player_name}</option>)\n      })}</select> */}\n      <ul className=\"list-group list-group-flush\">\n        {players.map(({ player_name }) => {\n          return (\n            <li key={player_name} className=\"list-group-item\">\n              {player_name}\n            </li>\n          );\n        })}\n      </ul>\n      {/* <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              {players[0]}\n            </li>\n            <li className=\"list-group-item\">\n              {players[1]}\n            </li>\n            <li className=\"list-group-item\">\n              {players[2]}\n            </li>\n            <li className=\"list-group-item\">\n              {players[3]}\n            </li>\n            <li className=\"list-group-item\">\n              {players[4]}\n            </li>\n      </ul> */}\n    </div>\n  );\n}\n\nexport default Players;\n","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Comments/Comments.js",["99"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Comment from \"./Comment\";\nimport \"./Comments.css\";\n\nimport CommentForm from \"./CommentForm\";\n\nimport {\n  getTeamCommentAPI,\n  createTeamCommentAPI,\n  updateTeamCommentAPI,\n  deleteTeamCommentAPI,\n} from \"../Api/API\";\n\nimport { CommentsContext } from \"../Context/Context\";\n\nconst API = process.env.REACT_APP_API_URL;\n\nfunction Comments() {\n  const [comments, setComments] = useState([]);\n\n  const [viewEditToggleForm, setViewEditToggleForm] = useState(false);\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    fetchTeamComment();\n  }, [id, API]);\n\n  async function fetchTeamComment() {\n    try {\n      let result = await getTeamCommentAPI(id);\n\n      setComments(result.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleAdd(newComment) {\n    try {\n      let result = await createTeamCommentAPI(id, newComment);\n      setComments([result.data, ...comments]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleEdit(updatedComment) {\n    console.log(\"Handle Edit\", updatedComment);\n    try {\n      let result = await updateTeamCommentAPI(\n        id,\n        updatedComment.id,\n        updatedComment\n      );\n\n      const copyCommentArray = [...comments];\n\n      const indexUpdatedComment = copyCommentArray.findIndex((comment) => {\n        return comment.id === updatedComment.id;\n      });\n\n      copyCommentArray[indexUpdatedComment] = result.data;\n\n      setComments(copyCommentArray);\n\n      setViewEditToggleForm(!viewEditToggleForm);\n    } catch (error) {\n      alert(\"sorry, we cannot update, please contact support\");\n      console.log(error);\n    }\n  }\n\n  async function handleDelete(id) {\n    try {\n      await deleteTeamCommentAPI(id);\n\n      let filteredCommentArray = comments.filter((item) => item.id !== id);\n\n      setComments(filteredCommentArray);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <section className=\"container\">\n      <div className=\" comments-container\">\n        <h5 className=\"comment-heading\">Add a New Comment</h5>\n        <CommentForm fromParentCommentsHandleSubmit={handleAdd}></CommentForm>\n        <h5 className=\"comment-heading-comment\">Comments</h5>\n        {comments.length > 0 &&\n          comments.map((item) => {\n            return (\n              <CommentsContext.Provider\n                value={{\n                  fromParentCommentsHandleSubmit: handleEdit,\n                  comment: item,\n                  handleDelete: handleDelete,\n                  viewEditToggleForm: viewEditToggleForm,\n                  setViewEditToggleForm: setViewEditToggleForm,\n                }}\n                key={item.id}\n              >\n                <Comment />\n              </CommentsContext.Provider>\n            );\n          })}\n      </div>\n    </section>\n  );\n}\n\nexport default Comments;\n","/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Players/Player.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Api/Axios.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Comments/Comment.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Comments/CommentForm.js",[],[],"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Context/Context.js",[],[],{"ruleId":"100","severity":1,"message":"101","line":25,"column":6,"nodeType":"102","endLine":25,"endColumn":8,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":2,"column":23,"nodeType":"106","messageId":"107","endLine":2,"endColumn":32},{"ruleId":"104","severity":1,"message":"108","line":12,"column":10,"nodeType":"106","messageId":"107","endLine":12,"endColumn":23},{"ruleId":"104","severity":1,"message":"109","line":12,"column":25,"nodeType":"106","messageId":"107","endLine":12,"endColumn":42},{"ruleId":"104","severity":1,"message":"110","line":15,"column":9,"nodeType":"106","messageId":"107","endLine":15,"endColumn":12},{"ruleId":"104","severity":1,"message":"111","line":35,"column":10,"nodeType":"106","messageId":"107","endLine":35,"endColumn":21},{"ruleId":"104","severity":1,"message":"112","line":35,"column":23,"nodeType":"106","messageId":"107","endLine":35,"endColumn":37},{"ruleId":"104","severity":1,"message":"113","line":64,"column":11,"nodeType":"106","messageId":"107","endLine":64,"endColumn":28},{"ruleId":"100","severity":1,"message":"114","line":75,"column":6,"nodeType":"102","endLine":75,"endColumn":10,"suggestions":"115"},{"ruleId":"104","severity":1,"message":"116","line":82,"column":18,"nodeType":"106","messageId":"107","endLine":82,"endColumn":23},{"ruleId":"104","severity":1,"message":"117","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"100","severity":1,"message":"118","line":16,"column":6,"nodeType":"102","endLine":16,"endColumn":15,"suggestions":"119"},{"ruleId":"100","severity":1,"message":"120","line":28,"column":6,"nodeType":"102","endLine":28,"endColumn":15,"suggestions":"121"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toFetchTeamById'. Either include it or remove the dependency array.","ArrayExpression",["122"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'seletedPlayer' is assigned a value but never used.","'setSelectedPlayer' is assigned a value but never used.","'API' is assigned a value but never used.","'teamMembers' is assigned a value but never used.","'setTeamMembers' is assigned a value but never used.","'fetchPlayerInTeam' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["123"],"'fetch' is defined but never used.","'Player' is defined but never used.","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array. Outer scope values like 'API' aren't valid dependencies because mutating them doesn't re-render the component.",["124"],"React Hook useEffect has a missing dependency: 'fetchTeamComment'. Either include it or remove the dependency array. Outer scope values like 'API' aren't valid dependencies because mutating them doesn't re-render the component.",["125"],{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [toFetchTeamById]",{"range":"134","text":"135"},"Update the dependencies array to be: [id, navigate]",{"range":"136","text":"137"},"Update the dependencies array to be: [id, fetch]",{"range":"138","text":"139"},"Update the dependencies array to be: [id, fetchTeamComment]",{"range":"140","text":"141"},[656,658],"[toFetchTeamById]",[2248,2252],"[id, navigate]",[379,388],"[id, fetch]",[643,652],"[id, fetchTeamComment]"]