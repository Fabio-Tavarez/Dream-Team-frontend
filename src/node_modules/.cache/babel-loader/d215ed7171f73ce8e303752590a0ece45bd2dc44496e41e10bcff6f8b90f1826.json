{"ast":null,"code":"var _jsxFileName = \"/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Comments/Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Comment from \"./Comment\";\nimport \"./Comments.css\";\nimport CommentForm from \"./CommentForm\";\nimport { getTeamCommentAPI, createTeamCommentAPI, updateTeamCommentAPI, deleteTeamCommentAPI } from \"../Api/API\";\nimport { CommentsContext } from \"../Context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API_URL;\nfunction Comments() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [viewEditToggleForm, setViewEditToggleForm] = useState(false);\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchTeamComment();\n  }, [id, API]);\n  async function fetchTeamComment() {\n    try {\n      let result = await getTeamCommentAPI(id);\n      setComments(result.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function handleAdd(newComment) {\n    try {\n      let result = await createTeamCommentAPI(id, newComment);\n      setComments([result.data, ...comments]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function handleEdit(updatedComment) {\n    console.log(\"Handle Edit\", updatedComment);\n    try {\n      let result = await updateTeamCommentAPI(id, updatedComment.id, updatedComment);\n      const copyCommentArray = [...comments];\n      const indexUpdatedComment = copyCommentArray.findIndex(comment => {\n        return comment.id === updatedComment.id;\n      });\n      copyCommentArray[indexUpdatedComment] = result.data;\n      setComments(copyCommentArray);\n      setViewEditToggleForm(!viewEditToggleForm);\n    } catch (error) {\n      alert(\"sorry, we cannot update, please contact support\");\n      console.log(error);\n    }\n  }\n  async function handleDelete(id) {\n    try {\n      await deleteTeamCommentAPI(id);\n      let filteredCommentArray = comments.filter(item => item.id !== id);\n      setComments(filteredCommentArray);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" comments-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"comment-heading\",\n        children: \"Add a New Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        fromParentCommentsHandleSubmit: handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"comment-heading-comment\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"I9lvVuKfHkf30/Irs5HehWX9J58=\", false, function () {\n  return [useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Comment","CommentForm","getTeamCommentAPI","createTeamCommentAPI","updateTeamCommentAPI","deleteTeamCommentAPI","CommentsContext","jsxDEV","_jsxDEV","API","process","env","REACT_APP_API_URL","Comments","_s","comments","setComments","viewEditToggleForm","setViewEditToggleForm","id","fetchTeamComment","result","data","error","console","log","handleAdd","newComment","handleEdit","updatedComment","copyCommentArray","indexUpdatedComment","findIndex","comment","alert","handleDelete","filteredCommentArray","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fromParentCommentsHandleSubmit","_c","$RefreshReg$"],"sources":["/Users/fabiotavarez/Desktop/Dream-Team-frontend/dream-team/src/components/Comments/Comments.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Comment from \"./Comment\";\nimport \"./Comments.css\";\n\nimport CommentForm from \"./CommentForm\";\n\nimport {\n  getTeamCommentAPI,\n  createTeamCommentAPI,\n  updateTeamCommentAPI,\n  deleteTeamCommentAPI,\n} from \"../Api/API\";\n\nimport { CommentsContext } from \"../Context/Context\";\n\nconst API = process.env.REACT_APP_API_URL;\n\nfunction Comments() {\n  const [comments, setComments] = useState([]);\n\n  const [viewEditToggleForm, setViewEditToggleForm] = useState(false);\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    fetchTeamComment();\n  }, [id, API]);\n\n  async function fetchTeamComment() {\n    try {\n      let result = await getTeamCommentAPI(id);\n\n      setComments(result.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleAdd(newComment) {\n    try {\n      let result = await createTeamCommentAPI(id, newComment);\n      setComments([result.data, ...comments]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleEdit(updatedComment) {\n    console.log(\"Handle Edit\", updatedComment);\n    try {\n      let result = await updateTeamCommentAPI(\n        id,\n        updatedComment.id,\n        updatedComment\n      );\n\n      const copyCommentArray = [...comments];\n\n      const indexUpdatedComment = copyCommentArray.findIndex((comment) => {\n        return comment.id === updatedComment.id;\n      });\n\n      copyCommentArray[indexUpdatedComment] = result.data;\n\n      setComments(copyCommentArray);\n\n      setViewEditToggleForm(!viewEditToggleForm);\n    } catch (error) {\n      alert(\"sorry, we cannot update, please contact support\");\n      console.log(error);\n    }\n  }\n\n  async function handleDelete(id) {\n    try {\n      await deleteTeamCommentAPI(id);\n\n      let filteredCommentArray = comments.filter((item) => item.id !== id);\n\n      setComments(filteredCommentArray);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <section className=\"container\">\n      <div className=\" comments-container\">\n        <h5 className=\"comment-heading\">Add a New Comment</h5>\n        <CommentForm fromParentCommentsHandleSubmit={handleAdd}></CommentForm>\n        <h5 className=\"comment-heading-comment\">Comments</h5>\n        {/* {comments.length &&\n          comments.map((item) => {\n            return (\n              <CommentsContext.Provider\n                value={{\n                  fromParentCommentsHandleSubmit: handleEdit,\n                  comment: item,\n                  handleDelete: handleDelete,\n                  viewEditToggleForm: viewEditToggleForm,\n                  setViewEditToggleForm: setViewEditToggleForm,\n                }}\n                key={item.id}\n              >\n                <Comment />\n              </CommentsContext.Provider>\n            );\n          })} */}\n      </div>\n    </section>\n  );\n}\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}